
resource "aws_vpc" "vpc" {
  cidr_block            = var.cidr_block
  enable_dns_support    = true
  enable_dns_hostnames  = true
}

resource "aws_subnet" "public" {
  for_each            = var.pub_subnet
  vpc_id              = aws_vpc.vpc.id
  cidr_block          = each.value["cidr_block"]
  availability_zone   = each.value["availability_zone"]
  map_public_ip_on_launch = true
}

resource "aws_subnet" "private" {
  for_each            = var.priv_subnet
  vpc_id              = aws_vpc.vpc.id
  cidr_block          = each.value["cidr_block"]
  availability_zone   = each.value["availability_zone"]
  map_public_ip_on_launch = false
}

resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.vpc.id
}

resource "aws_route_table" "pub-RT" {
  vpc_id = aws_vpc.vpc.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }
}

resource "aws_route_table_association" "pub-association" {
  for_each        = aws_subnet.public
  route_table_id = aws_route_table.pub-RT.id
  subnet_id      = each.value.id
}

resource "aws_eip" "eip" {
  for_each = var.eip
}

resource "aws_nat_gateway" "main" {
  depends_on = [ aws_eip.eip ]
  for_each       = var.nat-gateway
  subnet_id      = each.value["subnet_id"]
  allocation_id  = each.value["allocation_id"]
}

resource "aws_route_table" "priv-RT" {
  for_each        = var.priv_subnet_rt
  vpc_id          = aws_vpc.vpc.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = each.value["gateway_id"]
  }
}


resource "aws_route_table_association" "nat" {
  for_each       = var.private-rt-association
  route_table_id = each.value["route_table_id"] 
  subnet_id      = each.value["subnet_id"]
}

